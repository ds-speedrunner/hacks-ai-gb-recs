,link,title,skills,program
0,https://gb.ru/s/ai-integration-specialist,,,
1,https://gb.ru/geek_university/developer,Разработчик: старт в ИТ с нуля до Junior, Java Python JavaScript C++ C TCP/IP SQL NoSQL Linux Git HTML/CSS,
2,https://gb.ru/geek_university/developer/programmer/python-gb,Python-разработчик: быстрый старт в профессии,," Что такое программирование и языки программирования Базовые алгоритмы и массив как структура данных Сложность и стоимость алгоритмов Знакомство с контролем версий Установка и настройка системы контроля версий Углубляемся в контроль версий Знакомство с языком программирования С# Знакомство с функциями и массивами Функции продолжение Двумерные массивы и рекурсия Как не нужно писать код: основные рекомендации Как не нужно писать код: принципы и антипаттерны Рекурсия: продолжение C#: от простого к практике Веб-технологии: вчера, сегодня, завтра HTML, CSS Основы JavaScript Основы бэкенда: PHP и MySQL JSON и XML Знакомство с языком программирования Python Ввод-Вывод, операторы ветвления Циклы(for, while) Коллекции данных. Профилирование и отладка Списки и словари Словари, множества и профилирование Функции, рекурсия, алгоритмы Рекурсия и алгоритмы Повторение списков Функции высшего порядка, работа с файлами Функции высшего порядка Работа с файлами Google Colab(Jupyter). Знакомство с аналитикой Работа с табличными данными Построение графиков Основы Python Простые типы данных Коллекции Функции Интераторы и генераторы Модули Файлы и файловая система Сериализация Декораторы Исключения ООП. Начало ООП. Особенности Python ООП. Финал Основы тестирования Обзор стандартной библиотеки Python Django - что это? И для чего? Django ORM и связи Шаблоны, классы и формы Работа с пользователями и права в Django. Оптимизация проекта Развертывание Django проекта. Тестирование проекта Работа с удалёнными репозиториями Работа с изменениями Практики и инструменты для работы с Git Знакомство с базами данных Работа с данными из разных таблиц Создание структуры базы данных Дополнительная лекция Инструменты для работы с базами данных SQL - создание объектов, изменение данных, логические операторы SQL - выборка данных, сортировка, агрегатные функции SQL - объединение таблиц union, соединение - join, подзапросы SQL - оконные функции SQL - Транзакции, ACID. Временные таблицы, управляющие конструкции, циклы"
3,https://gb.ru/geek_university/engineer/main,Разработчик: старт в ИТ с нуля до Junior, Java Python JavaScript C++ C TCP/IP SQL NoSQL Linux Git HTML/CSS,
4,https://gb.ru/geek_university/engineer/blockchain,,,
5,https://gb.ru/geek_university/developer/programmer,Программист с нуля до Junior, Java Python JavaScript C++ C TCP/IP SQL NoSQL Linux Git HTML/CSS,
6,https://gb.ru/geek_university/developer/programmer/web/master,Веб-разработчик: быстрый старт в профессии,," Что такое программирование и языки программирования Базовые алгоритмы и массив как структура данных Сложность и стоимость алгоритмов Знакомство с контролем версий Установка и настройка системы контроля версий Углубляемся в контроль версий Знакомство с языком программирования С# Знакомство с функциями и массивами Функции продолжение Двумерные массивы и рекурсия Как не нужно писать код: основные рекомендации Как не нужно писать код: принципы и антипаттерны Рекурсия: продолжение C#: от простого к практике Веб-технологии: вчера, сегодня, завтра HTML, CSS Основы JavaScript Основы бэкенда: PHP и MySQL JSON и XML Знакомство с языком программирования Python Ввод-Вывод, операторы ветвления Циклы(for, while) Коллекции данных. Профилирование и отладка Списки и словари Словари, множества и профилирование Функции, рекурсия, алгоритмы Рекурсия и алгоритмы Повторение списков Функции высшего порядка, работа с файлами Функции высшего порядка Работа с файлами Google Colab(Jupyter). Знакомство с аналитикой Работа с табличными данными Построение графиков Основы Python Простые типы данных Коллекции Функции Интераторы и генераторы Модули Файлы и файловая система Сериализация Декораторы Исключения ООП. Начало ООП. Особенности Python ООП. Финал Основы тестирования Обзор стандартной библиотеки Python Django - что это? И для чего? Django ORM и связи Шаблоны, классы и формы Работа с пользователями и права в Django. Оптимизация проекта Развертывание Django проекта. Тестирование проекта Работа с удалёнными репозиториями Работа с изменениями Практики и инструменты для работы с Git Знакомство с базами данных Работа с данными из разных таблиц Создание структуры базы данных Дополнительная лекция Инструменты для работы с базами данных SQL - создание объектов, изменение данных, логические операторы SQL - выборка данных, сортировка, агрегатные функции SQL - объединение таблиц union, соединение - join, подзапросы SQL - оконные функции SQL - Транзакции, ACID. Временные таблицы, управляющие конструкции, циклы Расскажем, как спланировать обучение, чтобы сохранить интерес, получить максимум пользы и всё успеть. Вы освоите все ключевые операции в системе: создание и клонирование репозитория, слияние веток, запрос истории изменений и многое другое. Курс приблизит вас к прохождению собеседования, где несколько вопросов обычно посвящены системе контроля версий. Познакомитесь с языками программирования: функциями и массивами, рекурсиями и двумерными массивами. Узнаете, как нужно писать код. Познакомитесь с понятием «базы данных», разберетесь с их видами и основными подходами к работе с данными. Узнаете методы проектирования баз данных, а также способы модификации их структуры."
7,https://gb.ru/geek_university/developer/programmer/csharp/master,Разработчик на C#: быстрый старт в профессии,," Что такое программирование и языки программирования Базовые алгоритмы и массив как структура данных Сложность и стоимость алгоритмов Знакомство с контролем версий Установка и настройка системы контроля версий Углубляемся в контроль версий Знакомство с языком программирования С# Знакомство с функциями и массивами Функции продолжение Двумерные массивы и рекурсия Как не нужно писать код: основные рекомендации Как не нужно писать код: принципы и антипаттерны Рекурсия: продолжение C#: от простого к практике Веб-технологии: вчера, сегодня, завтра HTML, CSS Основы JavaScript Основы бэкенда: PHP и MySQL JSON и XML Вводная лекция. Алгоритмы. Сложность алгоритмов Структуры данных. Массивы. Алгоритмы массивов Структуры данных. Связный список Структуры данных дерево и хэш-таблица Знакомство с базами данных Работа с данными из разных таблиц Создание структуры базы данных Дополнительная лекция Инструменты для работы с базами данных SQL - создание объектов, изменение данных, логические операторы SQL - выборка данных, сортировка, агрегатные функции SQL - объединение таблиц union, соединение - join, подзапросы SQL - оконные функции SQL - Транзакции, ACID. Временные таблицы, управляющие конструкции, циклы Почему вы не можете не использовать API Коллекции JAVA: Введение Хранение и обработка данных ч1: приоритетные коллекции Хранение и обработка данных ч2: множество коллекций Map Хранение и обработка данных ч3: множество коллекций Set, примеры. Введение в ООП, как описать свой тип Введение в ООП. Свои типы и концепты ООП: Абстракция и интерфейсы Некоторые стандартные интерфейсы и новое поведениеОбобщения ООП: От простого к практикеSOLID Есть ли жизнь без Java? Подходы к обработке ошибок в разных языках программирования Обработка исключений в Java ""Продвинутые"" вопросы работы с исключениями Начало работы: .Net и Visual Studio Условные операторы, циклы, массивы, строки, StringBuilder Классы и ООП, Интерфейсы Работа с датой и временем, пространство имен System. Collections и коллекции LINQ Реализация паттерна Publisher/Subscriber Управляемый и неуправляемый код: обработка ошибок, ""безопасный"" код, высвобождение ресурсов Получение информации об обьекте во время выполнения приложения Сериализация: все о сериализации (Байт, XML, JSON) Работа с файловой системой: потоки и буферизация Работа с сетью: чтение и запись данных в сеть. Клиентские и серверные приложения Синхронизации : многопоточность, создание и завершение потоков PLINQ и асинхронность: как работает, области применения GOF: паттерны проектирования в .Net разработкеБазы данных: Entity framework, code first/ db first Тестирование приложений: test driven development Библиотеки: Nuget и разработка собственных библиотек ASP.Net MVC, этапы жизни приложения, контроллеры Инверся зависимости (IoC) и Autofac - гибкий инструмент для управления зависимостями WEB-серивсы: разработка, контейнеризация и упаковка веб сервиса в докер-контейнер Разграничение доступа: аутентификация, авторизация, OAUTH, JWT Основы Linux. Установка системы Работа с файлами в терминале Права доступа и пользователи Установка пакетов, репозитории. Планировщик cron Сетевые возможности Linux Веб-сервер на Linux Основы Docker Скрипты Bash Механизмы пространства Механизмы контрольных групп Введение в Docker Dockerfile и слои Docker Compose и Docker Swarm Работа с удалёнными репозиториями Работа с изменениями Практики и инструменты для работы с Git"
8,https://gb.ru/geek_university/developer/programmer/cpp/master,Курс «Разработчик на C++  с нуля до Junior»,,
9,https://gb.ru/geek_university/developer/programmer/javascript,,,
10,https://gb.ru/geek_university/developer/programmer/java-gb,,,
11,https://gb.ru/geek_university/developer/programmer/javascript/master,,,
12,https://gb.ru/geek_university/developer/programmer/ai-spec,,,
13,https://gb.ru/geek_university/developer/programmer/go/master,Разработчик: старт в ИТ с нуля до Junior, Java Python JavaScript C++ C TCP/IP SQL NoSQL Linux Git HTML/CSS,
14,https://gb.ru/geek_university/developer/programmer/csharp,Разработчик на C#: быстрый старт в профессии,," Что такое программирование и языки программирования Базовые алгоритмы и массив как структура данных Сложность и стоимость алгоритмов Знакомство с контролем версий Установка и настройка системы контроля версий Углубляемся в контроль версий Знакомство с языком программирования С# Знакомство с функциями и массивами Функции продолжение Двумерные массивы и рекурсия Как не нужно писать код: основные рекомендации Как не нужно писать код: принципы и антипаттерны Рекурсия: продолжение C#: от простого к практике Веб-технологии: вчера, сегодня, завтра HTML, CSS Основы JavaScript Основы бэкенда: PHP и MySQL JSON и XML Вводная лекция. Алгоритмы. Сложность алгоритмов Структуры данных. Массивы. Алгоритмы массивов Структуры данных. Связный список Структуры данных дерево и хэш-таблица Знакомство с базами данных Работа с данными из разных таблиц Создание структуры базы данных Дополнительная лекция Инструменты для работы с базами данных SQL - создание объектов, изменение данных, логические операторы SQL - выборка данных, сортировка, агрегатные функции SQL - объединение таблиц union, соединение - join, подзапросы SQL - оконные функции SQL - Транзакции, ACID. Временные таблицы, управляющие конструкции, циклы Почему вы не можете не использовать API Коллекции JAVA: Введение Хранение и обработка данных ч1: приоритетные коллекции Хранение и обработка данных ч2: множество коллекций Map Хранение и обработка данных ч3: множество коллекций Set, примеры. Введение в ООП, как описать свой тип Введение в ООП. Свои типы и концепты ООП: Абстракция и интерфейсы Некоторые стандартные интерфейсы и новое поведениеОбобщения ООП: От простого к практикеSOLID Есть ли жизнь без Java? Подходы к обработке ошибок в разных языках программирования Обработка исключений в Java ""Продвинутые"" вопросы работы с исключениями Начало работы: .Net и Visual Studio Условные операторы, циклы, массивы, строки, StringBuilder Классы и ООП, Интерфейсы Работа с датой и временем, пространство имен System. Collections и коллекции LINQ Реализация паттерна Publisher/Subscriber Управляемый и неуправляемый код: обработка ошибок, ""безопасный"" код, высвобождение ресурсов Получение информации об обьекте во время выполнения приложения Сериализация: все о сериализации (Байт, XML, JSON) Работа с файловой системой: потоки и буферизация Работа с сетью: чтение и запись данных в сеть. Клиентские и серверные приложения Синхронизации : многопоточность, создание и завершение потоков PLINQ и асинхронность: как работает, области применения GOF: паттерны проектирования в .Net разработкеБазы данных: Entity framework, code first/ db first Тестирование приложений: test driven development Библиотеки: Nuget и разработка собственных библиотек ASP.Net MVC, этапы жизни приложения, контроллеры Инверся зависимости (IoC) и Autofac - гибкий инструмент для управления зависимостями WEB-серивсы: разработка, контейнеризация и упаковка веб сервиса в докер-контейнер Разграничение доступа: аутентификация, авторизация, OAUTH, JWT Основы Linux. Установка системы Работа с файлами в терминале Права доступа и пользователи Установка пакетов, репозитории. Планировщик cron Сетевые возможности Linux Веб-сервер на Linux Основы Docker Скрипты Bash Механизмы пространства Механизмы контрольных групп Введение в Docker Dockerfile и слои Docker Compose и Docker Swarm Работа с удалёнными репозиториями Работа с изменениями Практики и инструменты для работы с Git"
15,https://gb.ru/geek_university/developer/programmer/frontend-gb,,,
16,https://gb.ru/geek_university/developer/programmer/1c-spec-gb,Курс «1C-разработчик: быстрый старт в профессии»,,
17,https://gb.ru/geek_university/developer/analyst/data-science-medicine-spec,Data Scientist в медицине: с нуля до Junior,,
18,https://gb.ru/geek_university/developer/architecture/devops-spec-gb,DevOps-инженер: быстрый старт в профессии, Ethernet,
19,https://gb.ru/geek_university/developer/programmer/python/master,Python-разработчик с нуля до Middle,,
20,https://gb.ru/geek_university/developer/programmer/internet-of-things,Разработчик умных устройств,," Что такое программирование и языки программирования Базовые алгоритмы и массив как структура данных Сложность и стоимость алгоритмов Знакомство с контролем версий Установка и настройка системы контроля версий Углубляемся в контроль версий Знакомство с базами данных Работа с данными из разных таблиц Создание структуры базы данных Дополнительная лекция Основы компьютерных сетей. Технология Ethernet Технология Ethernet. Протокол IP Сетевой уровень. Протоколы маршрутизации. VLAN Транспортный уровень. UPD и TCP Трансляция адресов. VPN HTTP(S). DNS Знакомство с языком программирования C# Знакомство с функциями и массивами Функции: продолжение Двумерные массивы и рекурсия Как не нужно писать код: основные рекомендации Как не нужно писать код: принципы и антипаттерны Рекурсия: продолжение C#: от простого к практике Вводная лекция. Алгоритмы. Сложность алгоритмов Структуры данных. Массивы. Алгоритмы массивов Структуры данных. Связный список Структуры данных дерево и хэш-таблица Введение в IoT Архитектура IoT решений Датчики и телеметрия Платформы интернета вещей Технологии передачи данных в IoT Введение в язык C и системы счисления Типы данных Ветвления и побитовые операции Циклы Буферный ввод. Функции Область видимости. Указатели. Рекурсия Вещественные типы данных. Массивы Адресная арифметика. Массивы, строки Структурные типы данных. Файлы Многомодульные программы Аргументы командной строки. Препроцессор. Отладка программ Побитовые операции. Структуры с побитовыми полями. Передача функции в функцию Структуры. Динамические типы. Библиотеки языка С Оптимизация кода Алгоритмы Компиляция и компиляторы Динамические структуры данных Курсовая работа Лекция 1 Лекция 2 Лекция 3 Лекция 4 Типы сетей и основные сетевые параметры Облачные вычисления Распределенные системы Mesh-сети IoT в распределенных системах и сетях и платформы интернета вещей Практика. Своя система визуализации Практика. Работа с сетью и сетевыми параметрами Работа с удалёнными репозиториями Работа с изменениями Практики и инструменты для работы с Git Основы Linux. Установка системы Работа с файлами в терминале Права доступа и пользователи Установка пакетов, репозитории. Планировщик Cron Сетевые возможности Linux Веб-сервер на Linux Основы Docker Скрипты Bash Механизмы пространства Механизмы контрольных групп Введение в Docker Dockerfile и слои Docker Compose и Docker Swarm Введение и основные типы парадигм Структурное программирование ООП Декларативное программирование Функциональное программирование Логическое программирование"
21,https://gb.ru/geek_university/developer/programmer/cpp-spec-gb,Разработчик на C++: быстрый старт в профессии,,
22,https://gb.ru/geek_university/developer/programmer/web,Веб-разработчик: быстрый старт в профессии,," Что такое программирование и языки программирования Базовые алгоритмы и массив как структура данных Сложность и стоимость алгоритмов Знакомство с контролем версий Установка и настройка системы контроля версий Углубляемся в контроль версий Знакомство с языком программирования С# Знакомство с функциями и массивами Функции продолжение Двумерные массивы и рекурсия Как не нужно писать код: основные рекомендации Как не нужно писать код: принципы и антипаттерны Рекурсия: продолжение C#: от простого к практике Веб-технологии: вчера, сегодня, завтра HTML, CSS Основы JavaScript Основы бэкенда: PHP и MySQL JSON и XML Знакомство с языком программирования Python Ввод-Вывод, операторы ветвления Циклы(for, while) Коллекции данных. Профилирование и отладка Списки и словари Словари, множества и профилирование Функции, рекурсия, алгоритмы Рекурсия и алгоритмы Повторение списков Функции высшего порядка, работа с файлами Функции высшего порядка Работа с файлами Google Colab(Jupyter). Знакомство с аналитикой Работа с табличными данными Построение графиков Основы Python Простые типы данных Коллекции Функции Интераторы и генераторы Модули Файлы и файловая система Сериализация Декораторы Исключения ООП. Начало ООП. Особенности Python ООП. Финал Основы тестирования Обзор стандартной библиотеки Python Django - что это? И для чего? Django ORM и связи Шаблоны, классы и формы Работа с пользователями и права в Django. Оптимизация проекта Развертывание Django проекта. Тестирование проекта Работа с удалёнными репозиториями Работа с изменениями Практики и инструменты для работы с Git Знакомство с базами данных Работа с данными из разных таблиц Создание структуры базы данных Дополнительная лекция Инструменты для работы с базами данных SQL - создание объектов, изменение данных, логические операторы SQL - выборка данных, сортировка, агрегатные функции SQL - объединение таблиц union, соединение - join, подзапросы SQL - оконные функции SQL - Транзакции, ACID. Временные таблицы, управляющие конструкции, циклы Расскажем, как спланировать обучение, чтобы сохранить интерес, получить максимум пользы и всё успеть. Вы освоите все ключевые операции в системе: создание и клонирование репозитория, слияние веток, запрос истории изменений и многое другое. Курс приблизит вас к прохождению собеседования, где несколько вопросов обычно посвящены системе контроля версий. Познакомитесь с языками программирования: функциями и массивами, рекурсиями и двумерными массивами. Узнаете, как нужно писать код. Познакомитесь с понятием «базы данных», разберетесь с их видами и основными подходами к работе с данными. Узнаете методы проектирования баз данных, а также способы модификации их структуры."
23,https://gb.ru/geek_university/developer/architecture/devops,DevOps-инженер с нуля до Middle, Ethernet,
24,https://gb.ru/geek_university/developer/qa-engineer/master,,,
25,https://gb.ru/geek_university/developer/programmer/cpp,Курс «Разработчик на C++  с нуля до Junior»,,
26,https://gb.ru/geek_university/developer/programmer/1c-developer,1С-разработчик с нуля до Junior,,
27,https://gb.ru/geek_university/developer/programmer/fullstack,Fullstack-разработчик: быстрый старт в профессии,,
28,https://gb.ru/geek_university/developer/programmer/backend,,,
29,https://gb.ru/geek_university/developer/programmer/ios,,,
30,https://gb.ru/geek_university/developer/programmer/java/master,,,
31,https://gb.ru/geek_university/developer/programmer/frontend/master,Frontend-разработчик с нуля до Middle,,
32,https://gb.ru/geek_university/engineer/datascience,,,
33,https://gb.ru/geek_university/developer/programmer/android-spec,Android-разработчик: быстрый старт в профессии, Java,
34,https://gb.ru/geek_university/developer/programmer/android,Android-разработчик с нуля до Junior, Java,
35,https://gb.ru/geek_university/developer/architecture/network-engineer,Сетевой инженер,,